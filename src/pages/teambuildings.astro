---
import Layout from '@/layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { TeamActivitiesList } from '@/components/TeamActivitiesList';
import { useEffect } from 'react';

// Get the category from the URL parameter
const categoryId = Astro.url.searchParams.get('category');

// Get all activities and categories
const activities = await getCollection('activities');
const categories = await getCollection('categories');

// Map activities to match the TeamActivity interface
const mappedActivities = activities.map((activity) => ({
  id: activity.id,
  title: activity.data.title || '',
  description: activity.data.description || '',
  image: activity.data.image || '',
  category: '',
  categories: activity.data.categories || [],
  duration: activity.data.duration || '',
  groupSize: activity.data.groupSize || '',
  price: '',
  availability: activity.data.availability || '',
  features: activity.data.features,
  gallery: activity.data.gallery,
}));

// Filter activities if a category is selected
const filteredActivities = categoryId
  ? mappedActivities.filter((activity) => activity.categories.includes(categoryId))
  : mappedActivities;

// Get category details if a category is selected
const selectedCategory = categoryId ? categories.find((cat) => cat.id === categoryId) : null;

// Prepare categories data for the filter component
const categoriesData = categories.map((cat) => ({
  id: cat.id,
  title: cat.data.title,
  description: cat.data.description,
  image: cat.data.image,
}));

// Where you handle category selection (probably in an onClick or similar)
const handleCategorySelect = (categoryId: string) => {
  // Your existing category selection logic

  // Add this scroll logic after the category is selected
  setTimeout(() => {
    const section = document.getElementById('activities-section');
    const offset = window.innerWidth < 768 ? 120 : 100;
    if (section) {
      section.scrollIntoView({ behavior: 'smooth' });
      window.scrollBy(0, -offset);
    }
  }, 100);
};
---

<Layout title={`${selectedCategory?.data.title || 'Alle'} Teambuilding Activities - ActionMaker`}>
  <TeamActivitiesList
    initialActivities={filteredActivities}
    categories={categoriesData}
    selectedCategory={categoryId}
    client:load
  />
</Layout>
