---
import { getLangFromUrl, useTranslations } from '@/i18n/utils';

interface Props {
  categories: {
    id: string;
    data: {
      title: string;
      description: string;
    };
  }[];
  selectedCategory: string | null;
  fromHomepage?: boolean;
}

const { categories, selectedCategory, fromHomepage = false } = Astro.props;
const lang = getLangFromUrl(Astro.url);

// Get clean category ID without locale prefix
const getCleanCategoryId = (id: string) => {
  return id.replace(`${lang}/`, '');
};

// Base URL should always be /teambuildings when not on homepage
const baseUrl = fromHomepage ? '/teambuildings' : '';
---

<div class="flex flex-wrap justify-center gap-4 mb-16">
  <a
    href={lang === 'nl' ? '/teambuildings' : `/${lang}/teambuildings`}
    class:list={[
      'px-4 py-2 rounded-full border transition-colors',
      !selectedCategory
        ? 'bg-red-600 text-white border-red-600'
        : 'border-gray-200 hover:border-red-600 hover:text-red-600',
    ]}
  >
    Alle activiteiten
  </a>
  {
    categories.map((category) => {
      const cleanId = getCleanCategoryId(category.id);
      const categoryUrl =
        lang === 'nl'
          ? `/teambuildings?category=${cleanId}#activities-section`
          : `/${lang}/teambuildings?category=${cleanId}#activities-section`;

      return (
        <a
          href={categoryUrl}
          class:list={[
            'px-4 py-2 rounded-full border transition-colors',
            selectedCategory === cleanId
              ? 'bg-red-600 text-white border-red-600'
              : 'border-gray-200 hover:border-red-600 hover:text-red-600',
          ]}
        >
          {category.data.title}
        </a>
      );
    })
  }
</div>

<script>
  // Add client-side handling to ensure URL parameters are cleared
  document.querySelector('[data-category="all"]')?.addEventListener('click', (e) => {
    e.preventDefault();
    window.location.href = '/teambuildings#activities-section';
  });
</script>
