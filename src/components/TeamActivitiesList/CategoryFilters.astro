---
interface Category {
  id: string;
  title: string;
  description: string;
}

interface Props {
  categories: Category[];
  selectedCategory: string | null;
  fromHomepage?: boolean;
}

const { categories, selectedCategory, fromHomepage = false } = Astro.props;

const baseUrl = fromHomepage ? '/teambuildings' : '/teambuildings';
---

<div class="flex flex-wrap justify-center gap-4 mb-16">
  <a
    href={`${baseUrl}#activities-section`}
    class:list={[
      'px-4 py-2 rounded-full border transition-colors',
      !selectedCategory
        ? 'bg-red-600 text-white border-red-600'
        : 'border-gray-200 hover:border-red-600 hover:text-red-600',
    ]}
    data-category="all"
  >
    Alle activiteiten
  </a>
  {
    categories.map((category) => (
      <a
        href={`${baseUrl}?category=${category.id}#activities-section`}
        class:list={[
          'px-4 py-2 rounded-full border transition-colors',
          selectedCategory === category.id
            ? 'bg-red-600 text-white border-red-600'
            : 'border-gray-200 hover:border-red-600 hover:text-red-600',
        ]}
        data-category={category.id}
      >
        {category.title}
      </a>
    ))
  }
</div>

<script>
  // Add client-side handling to ensure URL parameters are cleared
  document.querySelector('[data-category="all"]')?.addEventListener('click', (e) => {
    e.preventDefault();
    window.location.href = '/teambuildings#activities-section';
  });
</script>
