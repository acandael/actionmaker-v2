---
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import LanguageSelector from '../LanguageSelector.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const getLocalizedPath = (path: string) => {
  return lang === 'nl' ? path : `/${lang}${path}`;
};

const links = [
  { href: getLocalizedPath('/'), label: t('nav.home') },
  { href: getLocalizedPath('/teambuildings'), label: t('nav.teambuildings') },
  { href: getLocalizedPath('/over-actionmaker'), label: t('nav.about') },
  { href: getLocalizedPath('/contact'), label: t('nav.contact') },
];
---

<div
  class="fixed inset-y-0 right-0 w-full max-w-sm bg-black border-l border-white/10 translate-x-full transition-transform duration-300 ease-in-out z-50"
  data-mobile-menu
>
  <div class="h-20 flex items-center justify-end px-4">
    <button
      type="button"
      class="p-2 -mr-2 text-white/70 hover:text-white transition-colors"
      data-mobile-menu-trigger
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <nav class="px-4 space-y-4">
    {
      links.map(({ href, label }) => (
        <a href={href} class="block text-lg text-white/90 hover:text-white transition-colors">
          {label}
        </a>
      ))
    }
    <div class="pt-4">
      <LanguageSelector />
    </div>
  </nav>
</div>

<script>
  function setupMobileMenu() {
    const mobileMenu = document.querySelector('[data-mobile-menu]');
    const mobileMenuTriggers = document.querySelectorAll('[data-mobile-menu-trigger]');
    let isOpen = false;

    function toggleMenu() {
      isOpen = !isOpen;
      mobileMenu?.classList.toggle('translate-x-full', !isOpen);
    }

    // Close menu when clicking a link
    const menuLinks = mobileMenu?.querySelectorAll('a');
    menuLinks?.forEach((link) => {
      link.addEventListener('click', () => {
        isOpen = false;
        mobileMenu?.classList.add('translate-x-full');
      });
    });

    mobileMenuTriggers.forEach((trigger) => {
      trigger.addEventListener('click', toggleMenu);
    });
  }

  // Initialize on page load
  setupMobileMenu();

  // Re-initialize after view transitions
  document.addEventListener('astro:page-load', setupMobileMenu);
</script>
